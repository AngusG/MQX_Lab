   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"DisplayTask.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              	.LC2:
  21 0000 0A204469 		.ascii	"\012 Display task started\012\000"
  21      73706C61 
  21      79207461 
  21      736B2073 
  21      74617274 
  22              		.align	2
  23              	.LC3:
  24 0018 50202564 		.ascii	"P %d;\000"
  24      3B00
  25 001e 0000     		.align	2
  26              	.LC4:
  27 0020 5420310A 		.ascii	"T 1\012\000"
  27      00
  28 0025 000000   		.align	2
  29              	.LC5:
  30 0028 5420320A 		.ascii	"T 2\012\000"
  30      00
  31 002d 000000   		.align	2
  32              	.LC6:
  33 0030 5420330A 		.ascii	"T 3\012\000"
  33      00
  34 0035 000000   		.align	2
  35              	.LC7:
  36 0038 5420340A 		.ascii	"T 4\012\000"
  36      00
  37 003d 000000   		.align	2
  38              	.LC8:
  39 0040 5420300A 		.ascii	"T 0\012\000"
  39      00
  40 0045 000000   		.align	2
  41              	.LC0:
  42 0048 01000000 		.word	1
  43 004c 01000000 		.word	1
  44 0050 01000000 		.word	1
  45 0054 01000000 		.word	1
  46              		.align	2
  47              	.LC1:
  48 0058 0B000080 		.word	-2147483637
  49 005c 1C000080 		.word	-2147483620
  50 0060 1D000080 		.word	-2147483619
  51 0064 0A000080 		.word	-2147483638
  52              		.section	.text.Display_task,"ax",%progbits
  53              		.align	2
  54              		.global	Display_task
  55              		.thumb
  56              		.thumb_func
  58              	Display_task:
  59              	.LFB0:
  60              		.file 1 "../Sources/DisplayTask.c"
   1:../Sources/DisplayTask.c **** /*
   2:../Sources/DisplayTask.c ****  * DisplayTask.c
   3:../Sources/DisplayTask.c ****  *
   4:../Sources/DisplayTask.c ****  *  Created on: Feb 6, 2014
   5:../Sources/DisplayTask.c ****  *      Author: Embedded Access Inc
   6:../Sources/DisplayTask.c ****  */
   7:../Sources/DisplayTask.c **** 
   8:../Sources/DisplayTask.c **** #include "main.h"
   9:../Sources/DisplayTask.c **** 
  10:../Sources/DisplayTask.c **** void print_accelerometer_data();
  11:../Sources/DisplayTask.c **** 
  12:../Sources/DisplayTask.c **** /*TASK*-----------------------------------------------------
  13:../Sources/DisplayTask.c **** * 
  14:../Sources/DisplayTask.c **** * Task Name    : Display_task
  15:../Sources/DisplayTask.c **** * Comments     :
  16:../Sources/DisplayTask.c **** *    This is the Display task
  17:../Sources/DisplayTask.c **** *
  18:../Sources/DisplayTask.c **** *END*-----------------------------------------------------*/
  19:../Sources/DisplayTask.c **** 
  20:../Sources/DisplayTask.c **** extern SENSOR_DATA Sensor;
  21:../Sources/DisplayTask.c **** 
  22:../Sources/DisplayTask.c **** void Display_task(uint32_t initial_data)
  23:../Sources/DisplayTask.c **** {
  61              		.loc 1 23 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 128
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 90B5     		push	{r4, r7, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 12
  68              		.cfi_offset 4, -12
  69              		.cfi_offset 7, -8
  70              		.cfi_offset 14, -4
  71 0002 A1B0     		sub	sp, sp, #132
  72              	.LCFI1:
  73              		.cfi_def_cfa_offset 144
  74 0004 00AF     		add	r7, sp, #0
  75              	.LCFI2:
  76              		.cfi_def_cfa_register 7
  77 0006 7860     		str	r0, [r7, #4]
  24:../Sources/DisplayTask.c **** 	_queue_id my_qid;
  25:../Sources/DisplayTask.c **** 	APPLICATION_MESSAGE *msg;
  26:../Sources/DisplayTask.c **** 	int gotAccel = 0;
  78              		.loc 1 26 0
  79 0008 4FF00003 		mov	r3, #0
  80 000c FB67     		str	r3, [r7, #124]
  27:../Sources/DisplayTask.c **** 	int gotTouch = 0;
  81              		.loc 1 27 0
  82 000e 4FF00003 		mov	r3, #0
  83 0012 BB67     		str	r3, [r7, #120]
  28:../Sources/DisplayTask.c **** 	int gotPot = 0;
  84              		.loc 1 28 0
  85 0014 4FF00003 		mov	r3, #0
  86 0018 7B67     		str	r3, [r7, #116]
  29:../Sources/DisplayTask.c **** 	
  30:../Sources/DisplayTask.c **** 	/* Lab 5 variables */
  31:../Sources/DisplayTask.c **** 	LWGPIO_STRUCT leds[4];
  32:../Sources/DisplayTask.c **** 	uint32_t i;
  33:../Sources/DisplayTask.c **** 	uint32_t func[4] = { BSP_LED1_MUX_GPIO, 
  87              		.loc 1 33 0
  88 001a 40F20003 		movw	r3, #:lower16:.LC0
  89 001e C0F20003 		movt	r3, #:upper16:.LC0
  90 0022 07F11804 		add	r4, r7, #24
  91 0026 0FCB     		ldmia	r3, {r0, r1, r2, r3}
  92 0028 84E80F00 		stmia	r4, {r0, r1, r2, r3}
  34:../Sources/DisplayTask.c **** 						 BSP_LED2_MUX_GPIO,
  35:../Sources/DisplayTask.c **** 						 BSP_LED3_MUX_GPIO, 
  36:../Sources/DisplayTask.c **** 						 BSP_LED4_MUX_GPIO };
  37:../Sources/DisplayTask.c **** 	
  38:../Sources/DisplayTask.c **** 	LWGPIO_PIN_ID pins[4] = { BSP_LED1, BSP_LED2, BSP_LED3, BSP_LED4 };
  93              		.loc 1 38 0
  94 002c 40F20003 		movw	r3, #:lower16:.LC1
  95 0030 C0F20003 		movt	r3, #:upper16:.LC1
  96 0034 07F10804 		add	r4, r7, #8
  97 0038 0FCB     		ldmia	r3, {r0, r1, r2, r3}
  98 003a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
  39:../Sources/DisplayTask.c **** 	
  40:../Sources/DisplayTask.c **** 	printf("\n Display task started\n"); 
  99              		.loc 1 40 0
 100 003e 40F20000 		movw	r0, #:lower16:.LC2
 101 0042 C0F20000 		movt	r0, #:upper16:.LC2
 102 0046 FFF7FEFF 		bl	_io_printf
  41:../Sources/DisplayTask.c **** 	
  42:../Sources/DisplayTask.c **** 	my_qid = _msgq_open(DISPLAY_QUEUE, 0);	
 103              		.loc 1 42 0
 104 004a 4FF00200 		mov	r0, #2
 105 004e 4FF00001 		mov	r1, #0
 106 0052 FFF7FEFF 		bl	_msgq_open
 107 0056 0346     		mov	r3, r0
 108 0058 A7F86E30 		strh	r3, [r7, #110]	@ movhi
  43:../Sources/DisplayTask.c **** 	
  44:../Sources/DisplayTask.c **** 	/* Initialize leds*/
  45:../Sources/DisplayTask.c **** 	for(i=0;i<4;i++){
 109              		.loc 1 45 0
 110 005c 4FF00003 		mov	r3, #0
 111 0060 3B67     		str	r3, [r7, #112]
 112 0062 2BE0     		b	.L2
 113              	.L3:
  46:../Sources/DisplayTask.c **** 		lwgpio_init( &leds[i], pins[i], LWGPIO_DIR_OUTPUT, LWGPIO_VALUE_HIGH);
 114              		.loc 1 46 0
 115 0064 07F12802 		add	r2, r7, #40
 116 0068 3B6F     		ldr	r3, [r7, #112]
 117 006a 4FEA0313 		lsl	r3, r3, #4
 118 006e D218     		adds	r2, r2, r3
 119 0070 3B6F     		ldr	r3, [r7, #112]
 120 0072 4FEA8303 		lsl	r3, r3, #2
 121 0076 07F18001 		add	r1, r7, #128
 122 007a CB18     		adds	r3, r1, r3
 123 007c 53F8783C 		ldr	r3, [r3, #-120]
 124 0080 1046     		mov	r0, r2
 125 0082 1946     		mov	r1, r3
 126 0084 4FF00102 		mov	r2, #1
 127 0088 4FF00103 		mov	r3, #1
 128 008c FFF7FEFF 		bl	lwgpio_init
  47:../Sources/DisplayTask.c **** 		lwgpio_set_functionality( &leds[i], func[i]);
 129              		.loc 1 47 0
 130 0090 07F12802 		add	r2, r7, #40
 131 0094 3B6F     		ldr	r3, [r7, #112]
 132 0096 4FEA0313 		lsl	r3, r3, #4
 133 009a D218     		adds	r2, r2, r3
 134 009c 3B6F     		ldr	r3, [r7, #112]
 135 009e 4FEA8303 		lsl	r3, r3, #2
 136 00a2 07F18001 		add	r1, r7, #128
 137 00a6 CB18     		adds	r3, r1, r3
 138 00a8 53F8683C 		ldr	r3, [r3, #-104]
 139 00ac 1046     		mov	r0, r2
 140 00ae 1946     		mov	r1, r3
 141 00b0 FFF7FEFF 		bl	lwgpio_set_functionality
  45:../Sources/DisplayTask.c **** 	for(i=0;i<4;i++){
 142              		.loc 1 45 0
 143 00b4 3B6F     		ldr	r3, [r7, #112]
 144 00b6 03F10103 		add	r3, r3, #1
 145 00ba 3B67     		str	r3, [r7, #112]
 146              	.L2:
  45:../Sources/DisplayTask.c **** 	for(i=0;i<4;i++){
 147              		.loc 1 45 0 is_stmt 0
 148 00bc 3B6F     		ldr	r3, [r7, #112]
 149 00be 032B     		cmp	r3, #3
 150 00c0 D0D9     		bls	.L3
 151              	.L19:
  48:../Sources/DisplayTask.c **** 	}	
  49:../Sources/DisplayTask.c **** 	
  50:../Sources/DisplayTask.c **** 	
  51:../Sources/DisplayTask.c **** 	while(1){
  52:../Sources/DisplayTask.c **** 		
  53:../Sources/DisplayTask.c **** 		msg = _msgq_receive(my_qid, 1000); // returns null if no message after 1000ms
 152              		.loc 1 53 0 is_stmt 1
 153 00c2 B7F86E30 		ldrh	r3, [r7, #110]
 154 00c6 1846     		mov	r0, r3
 155 00c8 4FF47A71 		mov	r1, #1000
 156 00cc FFF7FEFF 		bl	_msgq_receive
 157 00d0 B866     		str	r0, [r7, #104]
  54:../Sources/DisplayTask.c **** 		
  55:../Sources/DisplayTask.c **** 		if (msg != NULL ) {
 158              		.loc 1 55 0
 159 00d2 BB6E     		ldr	r3, [r7, #104]
 160 00d4 002B     		cmp	r3, #0
 161 00d6 00F0D980 		beq	.L4
  56:../Sources/DisplayTask.c **** 			//printf("Display task received message %d: %d\n", msg->MESSAGE_TYPE,msg->DATA);
  57:../Sources/DisplayTask.c **** 			
  58:../Sources/DisplayTask.c **** 
  59:../Sources/DisplayTask.c **** 			switch (msg->MESSAGE_TYPE) {
 162              		.loc 1 59 0
 163 00da BB6E     		ldr	r3, [r7, #104]
 164 00dc 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 165 00de A3F10203 		sub	r3, r3, #2
 166 00e2 042B     		cmp	r3, #4
 167 00e4 00F2B680 		bhi	.L5
 168 00e8 01A2     		adr	r2, .L11
 169 00ea 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 170 00ee 00BF     		.align	2
 171              	.L11:
 172 00f0 69010000 		.word	.L6+1
 173 00f4 05010000 		.word	.L7+1
 174 00f8 15010000 		.word	.L8+1
 175 00fc 49010000 		.word	.L9+1
 176 0100 75010000 		.word	.L10+1
 177              	.L7:
  60:../Sources/DisplayTask.c **** 			
  61:../Sources/DisplayTask.c **** 			case SW1_Message:
  62:../Sources/DisplayTask.c **** 				lwgpio_set_value(&leds[0], LWGPIO_VALUE_LOW); // Orange -ON
 178              		.loc 1 62 0
 179 0104 07F12803 		add	r3, r7, #40
 180 0108 1846     		mov	r0, r3
 181 010a 4FF00001 		mov	r1, #0
 182 010e FFF7FEFF 		bl	lwgpio_set_value
  63:../Sources/DisplayTask.c **** 				break;
 183              		.loc 1 63 0
 184 0112 9FE0     		b	.L5
 185              	.L8:
  64:../Sources/DisplayTask.c **** 			case SW2_Message:
  65:../Sources/DisplayTask.c **** 				//lwgpio_set_value(&leds[1], msg->DATA);
  66:../Sources/DisplayTask.c **** 				lwgpio_set_value(&leds[0], LWGPIO_VALUE_HIGH); // Orange -off
 186              		.loc 1 66 0
 187 0114 07F12803 		add	r3, r7, #40
 188 0118 1846     		mov	r0, r3
 189 011a 4FF00101 		mov	r1, #1
 190 011e FFF7FEFF 		bl	lwgpio_set_value
  67:../Sources/DisplayTask.c **** 				lwgpio_set_value(&leds[1], LWGPIO_VALUE_HIGH); // Yellow -off
 191              		.loc 1 67 0
 192 0122 07F12803 		add	r3, r7, #40
 193 0126 03F11003 		add	r3, r3, #16
 194 012a 1846     		mov	r0, r3
 195 012c 4FF00101 		mov	r1, #1
 196 0130 FFF7FEFF 		bl	lwgpio_set_value
  68:../Sources/DisplayTask.c **** 				lwgpio_set_value(&leds[3], LWGPIO_VALUE_HIGH); // Blue -off
 197              		.loc 1 68 0
 198 0134 07F12803 		add	r3, r7, #40
 199 0138 03F13003 		add	r3, r3, #48
 200 013c 1846     		mov	r0, r3
 201 013e 4FF00101 		mov	r1, #1
 202 0142 FFF7FEFF 		bl	lwgpio_set_value
  69:../Sources/DisplayTask.c **** 				break;
 203              		.loc 1 69 0
 204 0146 85E0     		b	.L5
 205              	.L9:
  70:../Sources/DisplayTask.c **** 			
  71:../Sources/DisplayTask.c **** 			case ADC_READ_MESSAGE:					
  72:../Sources/DisplayTask.c **** 							
  73:../Sources/DisplayTask.c **** 				if(gotAccel){
 206              		.loc 1 73 0
 207 0148 FB6F     		ldr	r3, [r7, #124]
 208 014a 002B     		cmp	r3, #0
 209 014c 7FD0     		beq	.L20
  74:../Sources/DisplayTask.c **** 					gotPot = 1;	
 210              		.loc 1 74 0
 211 014e 4FF00103 		mov	r3, #1
 212 0152 7B67     		str	r3, [r7, #116]
  75:../Sources/DisplayTask.c **** 					printf("P %d;",msg->DATA); /*	TODO: output ADC potentiometer data directly to serial	*/					
 213              		.loc 1 75 0
 214 0154 BB6E     		ldr	r3, [r7, #104]
 215 0156 DB68     		ldr	r3, [r3, #12]
 216 0158 40F20000 		movw	r0, #:lower16:.LC3
 217 015c C0F20000 		movt	r0, #:upper16:.LC3
 218 0160 1946     		mov	r1, r3
 219 0162 FFF7FEFF 		bl	_io_printf
  76:../Sources/DisplayTask.c **** 				}								
  77:../Sources/DisplayTask.c **** 				break;
 220              		.loc 1 77 0
 221 0166 72E0     		b	.L20
 222              	.L6:
  78:../Sources/DisplayTask.c **** 				
  79:../Sources/DisplayTask.c **** 			case ACCEL_MESSAGE:	
  80:../Sources/DisplayTask.c **** 				
  81:../Sources/DisplayTask.c **** 				gotAccel = 1;				
 223              		.loc 1 81 0
 224 0168 4FF00103 		mov	r3, #1
 225 016c FB67     		str	r3, [r7, #124]
  82:../Sources/DisplayTask.c **** 				print_accelerometer_data();
 226              		.loc 1 82 0
 227 016e FFF7FEFF 		bl	print_accelerometer_data
  83:../Sources/DisplayTask.c **** 				
  84:../Sources/DisplayTask.c **** 				break;
 228              		.loc 1 84 0
 229 0172 6FE0     		b	.L5
 230              	.L10:
  85:../Sources/DisplayTask.c **** 				
  86:../Sources/DisplayTask.c **** 			case TOUCH_MESSAGE:
  87:../Sources/DisplayTask.c **** 				
  88:../Sources/DisplayTask.c **** 				gotTouch = 1;			
 231              		.loc 1 88 0
 232 0174 4FF00103 		mov	r3, #1
 233 0178 BB67     		str	r3, [r7, #120]
  89:../Sources/DisplayTask.c **** 				
  90:../Sources/DisplayTask.c **** 				if(1 == msg->DATA){
 234              		.loc 1 90 0
 235 017a BB6E     		ldr	r3, [r7, #104]
 236 017c DB68     		ldr	r3, [r3, #12]
 237 017e 012B     		cmp	r3, #1
 238 0180 14D1     		bne	.L13
  91:../Sources/DisplayTask.c **** 					if(gotPot){
 239              		.loc 1 91 0
 240 0182 7B6F     		ldr	r3, [r7, #116]
 241 0184 002B     		cmp	r3, #0
 242 0186 64D0     		beq	.L21
  92:../Sources/DisplayTask.c **** 						lwgpio_toggle_value(&leds[0]); //toggle orange LED
 243              		.loc 1 92 0
 244 0188 07F12803 		add	r3, r7, #40
 245 018c 1846     		mov	r0, r3
 246 018e FFF7FEFF 		bl	lwgpio_toggle_value
  93:../Sources/DisplayTask.c **** 						printf("T 1\n");
 247              		.loc 1 93 0
 248 0192 40F20000 		movw	r0, #:lower16:.LC4
 249 0196 C0F20000 		movt	r0, #:upper16:.LC4
 250 019a FFF7FEFF 		bl	_io_printf
  94:../Sources/DisplayTask.c **** 						gotPot = 0;		//We can now reset the pot since we finished the string
 251              		.loc 1 94 0
 252 019e 4FF00003 		mov	r3, #0
 253 01a2 7B67     		str	r3, [r7, #116]
  95:../Sources/DisplayTask.c **** 						gotAccel = 0;   //We can reset the accel since we finished the string
 254              		.loc 1 95 0
 255 01a4 4FF00003 		mov	r3, #0
 256 01a8 FB67     		str	r3, [r7, #124]
  96:../Sources/DisplayTask.c **** 					}
  97:../Sources/DisplayTask.c **** 				}
  98:../Sources/DisplayTask.c **** 				else if(2 == msg->DATA){
  99:../Sources/DisplayTask.c **** 					if(gotPot){
 100:../Sources/DisplayTask.c **** 						lwgpio_toggle_value(&leds[1]); //toggle yellow LED
 101:../Sources/DisplayTask.c **** 						printf("T 2\n");
 102:../Sources/DisplayTask.c **** 						gotPot = 0;		//We can now reset the pot since we finished the string
 103:../Sources/DisplayTask.c **** 						gotAccel = 0;   //We can reset the accel since we finished the string
 104:../Sources/DisplayTask.c **** 					}
 105:../Sources/DisplayTask.c **** 				}
 106:../Sources/DisplayTask.c **** 				else if(3 == msg->DATA){
 107:../Sources/DisplayTask.c **** 					if(gotPot){
 108:../Sources/DisplayTask.c **** 						lwgpio_toggle_value(&leds[2]); //toggle green LED
 109:../Sources/DisplayTask.c **** 						printf("T 3\n");
 110:../Sources/DisplayTask.c **** 						gotPot = 0;		//We can now reset the pot since we finished the string
 111:../Sources/DisplayTask.c **** 						gotAccel = 0;   //We can reset the accel since we finished the string
 112:../Sources/DisplayTask.c **** 					}
 113:../Sources/DisplayTask.c **** 				}
 114:../Sources/DisplayTask.c **** 				else if(4 == msg->DATA){
 115:../Sources/DisplayTask.c **** 					if(gotPot){
 116:../Sources/DisplayTask.c **** 						lwgpio_toggle_value(&leds[3]); //toggle blue LED
 117:../Sources/DisplayTask.c **** 						printf("T 4\n");
 118:../Sources/DisplayTask.c **** 						gotPot = 0;		//We can now reset the pot since we finished the string
 119:../Sources/DisplayTask.c **** 						gotAccel = 0;   //We can reset the accel since we finished the string
 120:../Sources/DisplayTask.c **** 					}
 121:../Sources/DisplayTask.c **** 				}				
 122:../Sources/DisplayTask.c **** 				break;			
 257              		.loc 1 122 0
 258 01aa 52E0     		b	.L21
 259              	.L13:
  98:../Sources/DisplayTask.c **** 				else if(2 == msg->DATA){
 260              		.loc 1 98 0
 261 01ac BB6E     		ldr	r3, [r7, #104]
 262 01ae DB68     		ldr	r3, [r3, #12]
 263 01b0 022B     		cmp	r3, #2
 264 01b2 16D1     		bne	.L15
  99:../Sources/DisplayTask.c **** 					if(gotPot){
 265              		.loc 1 99 0
 266 01b4 7B6F     		ldr	r3, [r7, #116]
 267 01b6 002B     		cmp	r3, #0
 268 01b8 4BD0     		beq	.L21
 100:../Sources/DisplayTask.c **** 						lwgpio_toggle_value(&leds[1]); //toggle yellow LED
 269              		.loc 1 100 0
 270 01ba 07F12803 		add	r3, r7, #40
 271 01be 03F11003 		add	r3, r3, #16
 272 01c2 1846     		mov	r0, r3
 273 01c4 FFF7FEFF 		bl	lwgpio_toggle_value
 101:../Sources/DisplayTask.c **** 						printf("T 2\n");
 274              		.loc 1 101 0
 275 01c8 40F20000 		movw	r0, #:lower16:.LC5
 276 01cc C0F20000 		movt	r0, #:upper16:.LC5
 277 01d0 FFF7FEFF 		bl	_io_printf
 102:../Sources/DisplayTask.c **** 						gotPot = 0;		//We can now reset the pot since we finished the string
 278              		.loc 1 102 0
 279 01d4 4FF00003 		mov	r3, #0
 280 01d8 7B67     		str	r3, [r7, #116]
 103:../Sources/DisplayTask.c **** 						gotAccel = 0;   //We can reset the accel since we finished the string
 281              		.loc 1 103 0
 282 01da 4FF00003 		mov	r3, #0
 283 01de FB67     		str	r3, [r7, #124]
 284              		.loc 1 122 0
 285 01e0 37E0     		b	.L21
 286              	.L15:
 106:../Sources/DisplayTask.c **** 				else if(3 == msg->DATA){
 287              		.loc 1 106 0
 288 01e2 BB6E     		ldr	r3, [r7, #104]
 289 01e4 DB68     		ldr	r3, [r3, #12]
 290 01e6 032B     		cmp	r3, #3
 291 01e8 16D1     		bne	.L16
 107:../Sources/DisplayTask.c **** 					if(gotPot){
 292              		.loc 1 107 0
 293 01ea 7B6F     		ldr	r3, [r7, #116]
 294 01ec 002B     		cmp	r3, #0
 295 01ee 30D0     		beq	.L21
 108:../Sources/DisplayTask.c **** 						lwgpio_toggle_value(&leds[2]); //toggle green LED
 296              		.loc 1 108 0
 297 01f0 07F12803 		add	r3, r7, #40
 298 01f4 03F12003 		add	r3, r3, #32
 299 01f8 1846     		mov	r0, r3
 300 01fa FFF7FEFF 		bl	lwgpio_toggle_value
 109:../Sources/DisplayTask.c **** 						printf("T 3\n");
 301              		.loc 1 109 0
 302 01fe 40F20000 		movw	r0, #:lower16:.LC6
 303 0202 C0F20000 		movt	r0, #:upper16:.LC6
 304 0206 FFF7FEFF 		bl	_io_printf
 110:../Sources/DisplayTask.c **** 						gotPot = 0;		//We can now reset the pot since we finished the string
 305              		.loc 1 110 0
 306 020a 4FF00003 		mov	r3, #0
 307 020e 7B67     		str	r3, [r7, #116]
 111:../Sources/DisplayTask.c **** 						gotAccel = 0;   //We can reset the accel since we finished the string
 308              		.loc 1 111 0
 309 0210 4FF00003 		mov	r3, #0
 310 0214 FB67     		str	r3, [r7, #124]
 311              		.loc 1 122 0
 312 0216 1CE0     		b	.L21
 313              	.L16:
 114:../Sources/DisplayTask.c **** 				else if(4 == msg->DATA){
 314              		.loc 1 114 0
 315 0218 BB6E     		ldr	r3, [r7, #104]
 316 021a DB68     		ldr	r3, [r3, #12]
 317 021c 042B     		cmp	r3, #4
 318 021e 18D1     		bne	.L21
 115:../Sources/DisplayTask.c **** 					if(gotPot){
 319              		.loc 1 115 0
 320 0220 7B6F     		ldr	r3, [r7, #116]
 321 0222 002B     		cmp	r3, #0
 322 0224 15D0     		beq	.L21
 116:../Sources/DisplayTask.c **** 						lwgpio_toggle_value(&leds[3]); //toggle blue LED
 323              		.loc 1 116 0
 324 0226 07F12803 		add	r3, r7, #40
 325 022a 03F13003 		add	r3, r3, #48
 326 022e 1846     		mov	r0, r3
 327 0230 FFF7FEFF 		bl	lwgpio_toggle_value
 117:../Sources/DisplayTask.c **** 						printf("T 4\n");
 328              		.loc 1 117 0
 329 0234 40F20000 		movw	r0, #:lower16:.LC7
 330 0238 C0F20000 		movt	r0, #:upper16:.LC7
 331 023c FFF7FEFF 		bl	_io_printf
 118:../Sources/DisplayTask.c **** 						gotPot = 0;		//We can now reset the pot since we finished the string
 332              		.loc 1 118 0
 333 0240 4FF00003 		mov	r3, #0
 334 0244 7B67     		str	r3, [r7, #116]
 119:../Sources/DisplayTask.c **** 						gotAccel = 0;   //We can reset the accel since we finished the string
 335              		.loc 1 119 0
 336 0246 4FF00003 		mov	r3, #0
 337 024a FB67     		str	r3, [r7, #124]
 338              		.loc 1 122 0
 339 024c 01E0     		b	.L21
 340              	.L20:
  77:../Sources/DisplayTask.c **** 				break;
 341              		.loc 1 77 0
 342 024e 00BF     		nop
 343 0250 00E0     		b	.L5
 344              	.L21:
 345              		.loc 1 122 0
 346 0252 00BF     		nop
 347              	.L5:
 123:../Sources/DisplayTask.c **** 			}
 124:../Sources/DisplayTask.c **** 			if((!gotTouch) && (gotPot == 1) && (gotAccel == 1)){	/* If there was no touch, and we are ready 
 348              		.loc 1 124 0
 349 0254 BB6F     		ldr	r3, [r7, #120]
 350 0256 002B     		cmp	r3, #0
 351 0258 11D1     		bne	.L17
 352              		.loc 1 124 0 is_stmt 0
 353 025a 7B6F     		ldr	r3, [r7, #116]
 354 025c 012B     		cmp	r3, #1
 355 025e 0ED1     		bne	.L17
 356 0260 FB6F     		ldr	r3, [r7, #124]
 357 0262 012B     		cmp	r3, #1
 358 0264 0BD1     		bne	.L17
 125:../Sources/DisplayTask.c **** 				printf("T 0\n");
 359              		.loc 1 125 0 is_stmt 1
 360 0266 40F20000 		movw	r0, #:lower16:.LC8
 361 026a C0F20000 		movt	r0, #:upper16:.LC8
 362 026e FFF7FEFF 		bl	_io_printf
 126:../Sources/DisplayTask.c **** 				gotPot = 0;		//We can now reset the pot since we finished the string
 363              		.loc 1 126 0
 364 0272 4FF00003 		mov	r3, #0
 365 0276 7B67     		str	r3, [r7, #116]
 127:../Sources/DisplayTask.c **** 				gotAccel = 0;   //We can reset the accel since we finished the string
 366              		.loc 1 127 0
 367 0278 4FF00003 		mov	r3, #0
 368 027c FB67     		str	r3, [r7, #124]
 369              	.L17:
 128:../Sources/DisplayTask.c **** 			}
 129:../Sources/DisplayTask.c **** 			gotTouch = 0; //We are now finished with the touch, it should be reset				
 370              		.loc 1 129 0
 371 027e 4FF00003 		mov	r3, #0
 372 0282 BB67     		str	r3, [r7, #120]
 130:../Sources/DisplayTask.c **** 			_msg_free(msg);
 373              		.loc 1 130 0
 374 0284 B86E     		ldr	r0, [r7, #104]
 375 0286 FFF7FEFF 		bl	_msg_free
 131:../Sources/DisplayTask.c **** 		}  
 132:../Sources/DisplayTask.c **** 		else{
 133:../Sources/DisplayTask.c **** 			lwgpio_toggle_value(&leds[2]); //toggle green LED
 134:../Sources/DisplayTask.c **** 		}
 135:../Sources/DisplayTask.c **** 	}
 376              		.loc 1 135 0
 377 028a 1AE7     		b	.L19
 378              	.L4:
 133:../Sources/DisplayTask.c **** 			lwgpio_toggle_value(&leds[2]); //toggle green LED
 379              		.loc 1 133 0
 380 028c 07F12803 		add	r3, r7, #40
 381 0290 03F12003 		add	r3, r3, #32
 382 0294 1846     		mov	r0, r3
 383 0296 FFF7FEFF 		bl	lwgpio_toggle_value
 384              		.loc 1 135 0
 385 029a 12E7     		b	.L19
 386              		.cfi_endproc
 387              	.LFE0:
 389              		.section	.rodata
 390              		.align	2
 391              	.LC9:
 392 0068 41202530 		.ascii	"A %04d;\000"
 392      34643B00 
 393              		.align	2
 394              	.LC10:
 395 0070 25303464 		.ascii	"%04d;\000"
 395      3B00
 396 0076 0000     		.section	.text.print_accelerometer_data,"ax",%progbits
 397              		.align	2
 398              		.global	print_accelerometer_data
 399              		.thumb
 400              		.thumb_func
 402              	print_accelerometer_data:
 403              	.LFB1:
 136:../Sources/DisplayTask.c **** }
 137:../Sources/DisplayTask.c **** void print_accelerometer_data()
 138:../Sources/DisplayTask.c **** {
 404              		.loc 1 138 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408 0000 80B5     		push	{r7, lr}
 409              	.LCFI3:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 7, -8
 412              		.cfi_offset 14, -4
 413 0002 00AF     		add	r7, sp, #0
 414              	.LCFI4:
 415              		.cfi_def_cfa_register 7
 139:../Sources/DisplayTask.c ****    //MMA7660 Sensor
 140:../Sources/DisplayTask.c **** 
 141:../Sources/DisplayTask.c ****    printf("A %04d;", Sensor.mma7660_x*5 );
 416              		.loc 1 141 0
 417 0004 40F20003 		movw	r3, #:lower16:Sensor
 418 0008 C0F20003 		movt	r3, #:upper16:Sensor
 419 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 420 000e 5AB2     		sxtb	r2, r3
 421 0010 1346     		mov	r3, r2
 422 0012 4FEA8303 		lsl	r3, r3, #2
 423 0016 9B18     		adds	r3, r3, r2
 424 0018 40F20000 		movw	r0, #:lower16:.LC9
 425 001c C0F20000 		movt	r0, #:upper16:.LC9
 426 0020 1946     		mov	r1, r3
 427 0022 FFF7FEFF 		bl	_io_printf
 142:../Sources/DisplayTask.c ****    printf("%04d;", Sensor.mma7660_y*5 );
 428              		.loc 1 142 0
 429 0026 40F20003 		movw	r3, #:lower16:Sensor
 430 002a C0F20003 		movt	r3, #:upper16:Sensor
 431 002e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 432 0030 5AB2     		sxtb	r2, r3
 433 0032 1346     		mov	r3, r2
 434 0034 4FEA8303 		lsl	r3, r3, #2
 435 0038 9B18     		adds	r3, r3, r2
 436 003a 40F20000 		movw	r0, #:lower16:.LC10
 437 003e C0F20000 		movt	r0, #:upper16:.LC10
 438 0042 1946     		mov	r1, r3
 439 0044 FFF7FEFF 		bl	_io_printf
 143:../Sources/DisplayTask.c ****    printf("%04d;", Sensor.mma7660_z*5 );
 440              		.loc 1 143 0
 441 0048 40F20003 		movw	r3, #:lower16:Sensor
 442 004c C0F20003 		movt	r3, #:upper16:Sensor
 443 0050 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 444 0052 5AB2     		sxtb	r2, r3
 445 0054 1346     		mov	r3, r2
 446 0056 4FEA8303 		lsl	r3, r3, #2
 447 005a 9B18     		adds	r3, r3, r2
 448 005c 40F20000 		movw	r0, #:lower16:.LC10
 449 0060 C0F20000 		movt	r0, #:upper16:.LC10
 450 0064 1946     		mov	r1, r3
 451 0066 FFF7FEFF 		bl	_io_printf
 144:../Sources/DisplayTask.c **** }
 452              		.loc 1 144 0
 453 006a 80BD     		pop	{r7, pc}
 454              		.cfi_endproc
 455              	.LFE1:
 457              		.text
 458              	.Letext0:
 459              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 460              		.file 3 "C:/Freescale/Freescale_MQX_4_1/lib/twrk60n512.cw10gcc/debug/psp/MK60DZ10.h"
 461              		.file 4 "C:/Freescale/Freescale_MQX_4_1/lib/twrk60n512.cw10gcc/debug/bsp/lwgpio_kgpio.h"
 462              		.file 5 "C:/Freescale/Freescale_MQX_4_1/lib/twrk60n512.cw10gcc/debug/bsp/lwgpio.h"
 463              		.file 6 "C:/Freescale/Freescale_MQX_4_1/lib/twrk60n512.cw10gcc/debug/psp/message.h"
 464              		.file 7 "../Sources/main.h"
DEFINED SYMBOLS
                            *ABS*:00000000 DisplayTask.c
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:19     .rodata:00000000 $d
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:20     .rodata:00000000 .LC2
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:23     .rodata:00000018 .LC3
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:26     .rodata:00000020 .LC4
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:29     .rodata:00000028 .LC5
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:32     .rodata:00000030 .LC6
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:35     .rodata:00000038 .LC7
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:38     .rodata:00000040 .LC8
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:41     .rodata:00000048 .LC0
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:47     .rodata:00000058 .LC1
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:53     .text.Display_task:00000000 $t
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:58     .text.Display_task:00000000 Display_task
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:172    .text.Display_task:000000f0 $d
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:179    .text.Display_task:00000104 $t
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:402    .text.print_accelerometer_data:00000000 print_accelerometer_data
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:391    .rodata:00000068 .LC9
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:394    .rodata:00000070 .LC10
C:\Users\Angus\AppData\Local\Temp\cc5SQEG8.s:397    .text.print_accelerometer_data:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_io_printf
_msgq_open
lwgpio_init
lwgpio_set_functionality
_msgq_receive
lwgpio_set_value
lwgpio_toggle_value
_msg_free
Sensor
